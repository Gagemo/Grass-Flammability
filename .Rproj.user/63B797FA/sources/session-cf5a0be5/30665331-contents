################################################################################
################################################################################
#########################   Grass - Flammability   #############################
#########################         Max Temp         #############################
#########################  University of Florida   #############################
#########################     Gage LaPierre        #############################
#########################          2023            #############################
################################################################################
################################################################################

######################### Clears Environment & History  ########################

rm(list=ls(all=TRUE))
cat("\014") 
#
#########################     Installs Packages   ##############################

list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
                      "ggpubr", "rstatix", "multcompView")
new.packages <- list.of.packages[!(list.of.packages %in% 
                                     installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)

##########################     Loads Packages     ##############################

library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)

##########################     Read in Data  ###################################

GRASS = read.csv("Data/Flammability Project - Temp.csv")

str(GRASS)
summary(GRASS)

GRASS$Species = as.character(GRASS$Species)
GRASS$Species = as.factor(GRASS$Species)
GRASS$T1 = as.numeric(GRASS$T1)
GRASS$T2 = as.numeric(GRASS$T2)

GRASS$Species = factor(GRASS$Species)


##### Filter for max temperature for T1 (Bottom Probe) and T2 (Top Probe) ######

MxT1 <- GRASS %>% 
  group_by(ID, Species) %>%                 
  summarise(MaxTemp = max(T1)) %>%
  arrange(ID, Species)

MxT2 <- GRASS %>% 
  group_by(ID, Species) %>%                 
  summarise(MaxTemp = max(T2)) %>%
  arrange(ID, Species)

GRASS <- cbind(MxT1, MxT2)
GRASS <- select(GRASS, -ID...4, -Species...5)
colnames(GRASS) <- c("ID", "Species", "MaxT1", "MaxT2")
GRASS <- GRASS[-c(52), ]

# Check Assumptions #
model  <- lm(MaxT1 ~ Species, data = GRASS)

# Create a QQ plot of residuals
ggqqplot(residuals(model))

# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)

# Compute Levene's Test
GRASS %>% levene_test(MaxT1 ~ Species)

# Test for Significance #
anova_ = GRASS %>% anova_test(MaxT1 ~ Species) %>% 
  add_significance()
anova_

lm(formula = MaxT1 ~ Species, GRASS)
tukey_ <- GRASS %>% 
  tukey_hsd(MaxT1 ~ Species) %>% 
  add_significance() %>% 
  add_xy_position()
 tukey_

########################## Tukey Test - Multiple Comparisons ###################
anova <- 
  aov(MaxT1 ~ Species, data = GRASS) %>% add_significance()
summary(anova)

tukey <-TukeyHSD(anova) 
tukey

HSD = HSD.test(anova, trt = c("Species"))
HSD

tukey.cld <- multcompLetters4(anova, tukey)
print(tukey.cld)

dt <- GRASS %>% 
  group_by(Species) %>%
  summarise(w=mean(exp(MaxT1)), 
            sd = sd(exp(MaxT1)) / sqrt(n())) %>%
  arrange(desc(w)) %>% 
  ungroup() 

# extracting the compact letter display and adding to the Tk table
cld2 <- data.frame(letters = tukey.cld$`Species`$Letters)
dt$tukey.cld <- cld2$letters

################### Box Plot - Max Growth Heights ######################
box = 
  ggplot(GRASS, aes(x = Species, y = MaxT1, fill = Species)) + 
  geom_boxplot(size = 0.5, color="black", show.legend = FALSE) +
  geom_point(shape=16, show.legend = FALSE, size =2)  +
  geom_text(data = dt, aes(label = tukey.cld, y = 950), size=10, vjust = 0.5) +
  labs(subtitle = get_test_label(anova_, detailed = TRUE),
       caption = get_pwc_label(tukey_)) +
  theme_classic() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
        text=element_text(size=16),
        axis.title.x = element_text(size=15, face="bold", colour = "black"),    
        axis.title.y = element_text(size=15, face="bold", colour = "black"),   
        axis.text.x=element_text(size=15, face = "italic", color = "black"),
        axis.text.y=element_text(size=15, face = "bold", color = "black"),
        strip.text.x = 
          element_text(size = 15, colour = "black", face = "italic"),
        legend.position = "none") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylab("Max temperature (C)")
box

ggsave("Figures/Box_Max_T1.png", 
       width = 10, height = 7)

tmp <- tabular(Species ~ MaxT1* (mean+sd+std.error), data=GRASS)
tmp

write.csv.tabular(tmp, "Figures/T1.csv")


################################################################################
################################################################################
################################ t2 (top probe) ################################
################################################################################
################################################################################

# Check Assumptions #
model  <- lm(MaxT2 ~ Species, data = GRASS)

# Create a QQ plot of residuals
ggqqplot(residuals(model))

# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
plot(model, 1)

# Compute Levene's Test
GRASS %>% levene_test(MaxT2 ~ Species)

# Test for Significance #
anova_ = GRASS %>% anova_test(MaxT2 ~ Species) %>% 
  add_significance()
anova_

lm(formula = MaxT2 ~ Species, GRASS)
tukey_ <- GRASS %>% 
  tukey_hsd(MaxT2 ~ Species) %>% 
  add_significance() %>% 
  add_xy_position()
tukey_

########################## Tukey Test - Multiple Comparisons ###################
anova <- 
  aov(MaxT2 ~ Species, data = GRASS) %>% add_significance()
summary(anova)

tukey <-TukeyHSD(anova) 
tukey

HSD = HSD.test(anova, trt = c("Species"))
HSD

tukey.cld <- multcompLetters4(anova, tukey)
print(tukey.cld)

dt <- GRASS %>% 
  group_by(Species) %>%
  summarise(w=mean(exp(MaxT2)), 
            sd = sd(exp(MaxT2)) / sqrt(n())) %>%
  arrange(desc(w)) %>% 
  ungroup() 

# extracting the compact letter display and adding to the Tk table
cld2 <- data.frame(letters = tukey.cld$`Species`$Letters)
dt$tukey.cld <- cld2$letters

box = 
  ggplot(GRASS, aes(x = Species, y = MaxT2, fill = Species)) + 
  geom_boxplot(size = 0.5, color="black", show.legend = FALSE) +
  geom_point(shape=16, show.legend = FALSE, size =2)  +
  geom_text(data = dt, aes(label = tukey.cld, y = 775), size=10, vjust = 0.5) +
  labs(subtitle = get_test_label(anova_, detailed = TRUE),
       caption = get_pwc_label(tukey_)) +
  theme_classic() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
        text=element_text(size=16),
        axis.title.x = element_text(size=15, face="bold", colour = "black"),    
        axis.title.y = element_text(size=15, face="bold", colour = "black"),   
        axis.text.x=element_text(size=15, face = "italic", color = "black"),
        axis.text.y=element_text(size=15, face = "bold", color = "black"),
        strip.text.x = 
          element_text(size = 15, colour = "black", face = "italic"),
        legend.position = "none") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylab("Max temperature (C)")
box

ggsave("Figures/Box_Max_T2.png", 
       width = 10, height = 7)

tmp <- tabular(Species ~ MaxT2 * (mean+sd+std.error), data=GRASS)
tmp

write.csv.tabular(tmp, "Figures/T2.csv")
