colnames(data) <- c( "Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss", "FB")
data <- select(data, Flame_Total, Smld_Total, Max_Height, Mass_Loss, FB)
data <- dplyr::select(data, Flame_Total, Smld_Total, Max_Height, Mass_Loss, FB)
View(data)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data <- dplyr::select(data, Flame_Total, Smld_Total, Max_Height, Mass_Loss, FB)
data <- dplyr::select(data, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data <- dplyr::select(data, FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
data = as.numeric(data$FB)
data <- dplyr::select(data, FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
rm(list=ls(all=TRUE))
cat("\014")
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data = as.numeric(data$FB)
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c( "Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss", "FB")
data$Species <- TIME$Species
data$Status <- TIME$Ruderal
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data = as.numeric(data$FB)
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
View(TIME)
View(LOSS)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
View(data)
data <- data %>%
dplyr::select(FB.1, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data = as.numeric(data$FB)
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
data <- data %>%
dplyr::select(-FB)
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data = select(data, -FB)
data = select(data, FB)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data = select(data, -FB)
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
data <- data[ , !duplicated(colnames(data))]
View(data)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
View(data)
colnames(data) <- c("FB", "Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss")
data$Species <- TIME$Species
data$Status <- TIME$Ruderal
pca <- rda(data %>% select(-Species, -Status), scale = TRUE)  # Remove 'Species' and 'Status' columns for PCA
rm(list=ls(all=TRUE))
cat("\014")
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("FB", "Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss")
data$Species <- TIME$Species
data$Status <- TIME$Ruderal
pca <- rda(data %>% select(-Species, -Status), scale = TRUE)  # Remove 'Species' and 'Status' columns for PCA
pca_scores <- as.data.frame(vegan::scores(pca, choices = c(1, 2), display = "sites"))
data$Species <- TIME$Species
data$Status <- TIME$Ruderal
pca <- rda(data %>% select(-Species, -Status), scale = TRUE)  # Remove 'Species' and 'Status' columns for PCA
pca <- data %>% select(-Species, -Status) %>%
rda(scale = TRUE)  # Remove 'Species' and 'Status' columns for PCA
pca <- data %>% dplyr::select(-Species, -Status) %>%
rda(scale = TRUE)  # Remove 'Species' and 'Status' columns for PCA
pca_scores <- as.data.frame(vegan::scores(pca, choices = c(1, 2), display = "sites"))
pca_scores$Species <- data$Species  # Add species information to scores
pca_scores$Status <- data$Status    # Add status information to scores
# Extract the loadings for plotting arrows
loadings <- as.data.frame(vegan::scores(pca, display = "species"))
loadings$Flammability <- rownames(loadings)
ggplot(pca_scores, aes(x = PC1, y = PC2, color = Species)) +
geom_point(size = 4, alpha = 0.7) +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1 * 0.5, yend = PC2 * 0.5),
arrow = arrow(length = unit(0.3, "cm")), color = "black") +
geom_text(data = loadings, aes(x = PC1 * 0.5, y = PC2 * 0.5, label = Flammability),
color = "black", vjust = -0.5, hjust = 0.5, size = 6) +
xlab(paste("PC1 (", round(summary(pca)$cont$importance[2, 1] * 100, 1), "%)", sep = "")) +
ylab(paste("PC2 (", round(summary(pca)$cont$importance[2, 2] * 100, 1), "%)", sep = "")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=18),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(face = "bold", color = "black"),
axis.text.y=element_text(face = "bold", color = "black"),
strip.text.x = element_text(size = 15, colour = "black", face = "bold"),
legend.text = element_text(face = "italic")) +
theme(legend.position = "bottom")
ggsave("Figures/Box_PCA.png",
width = 10, height = 7)
ggplot(pca_scores, aes(x = PC1, y = PC2, color = Status)) +
geom_point(size = 4, alpha = 0.7) +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1 * 2, yend = PC2 * 2),
arrow = arrow(length = unit(0.3, "cm")), color = "red") +
geom_text(data = loadings, aes(x = PC1 * 2, y = PC2 * 2, label = Flammability),
color = "red", vjust = -0.5, hjust = 0.5) +
stat_ellipse(aes(color = Status), type = "norm", level = 0.95) +  # Add ellipses
xlab(paste("PC1 (", round(summary(pca)$cont$importance[2, 1] * 100, 1), "%)", sep = "")) +
ylab(paste("PC2 (", round(summary(pca)$cont$importance[2, 2] * 100, 1), "%)", sep = "")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=18),
axis.title.x = element_text(size=15, face="bold", colour = "black"),
axis.title.y = element_text(size=15, face="bold", colour = "black"),
axis.text.x=element_text(size=15, face = "bold", color = "black"),
axis.text.y=element_text(size=15, face = "bold", color = "black"),
strip.text.x = element_text(size = 15, colour = "black", face = "bold"),
legend.text = element_text(face = "italic")) +
theme(legend.position = "bottom")
ggplot(pca_scores, aes(x = PC1, y = PC2, color = Species)) +
geom_point(size = 4, alpha = 0.7) +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1 * 0.5, yend = PC2 * 0.5),
arrow = arrow(length = unit(0.3, "cm")), color = "black") +
geom_text(data = loadings, aes(x = PC1 * 0.5, y = PC2 * 0.5, label = Flammability),
color = "black", vjust = -0.5, hjust = 0.5, size = 6) +
xlab(paste("PC1 (", round(summary(pca)$cont$importance[2, 1] * 100, 1), "%)", sep = "")) +
ylab(paste("PC2 (", round(summary(pca)$cont$importance[2, 2] * 100, 1), "%)", sep = "")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=18),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(face = "bold", color = "black"),
axis.text.y=element_text(face = "bold", color = "black"),
strip.text.x = element_text(size = 15, colour = "black", face = "bold"),
legend.text = element_text(face = "italic")) +
theme(legend.position = "bottom")
ggsave("Figures/Box_PCA.png",
width = 10, height = 7)
data <- data %>%
dplyr::select(Flame_Total, Smld_Total, Max_Height, Mass_Loss)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("FB", "Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss")
data$Species <- TIME$Species
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss")
data$Species <- TIME$Species
data$Status <- TIME$Ruderal
pca <- data %>% dplyr::select(-Species, -Status) %>%
rda(scale = TRUE)  # Remove 'Species' and 'Status' columns for PCA
pca_scores <- as.data.frame(vegan::scores(pca, choices = c(1, 2), display = "sites"))
pca_scores$Species <- data$Species  # Add species information to scores
pca_scores$Status <- data$Status    # Add status information to scores
# Extract the loadings for plotting arrows
loadings <- as.data.frame(vegan::scores(pca, display = "species"))
loadings$Flammability <- rownames(loadings)
ggplot(pca_scores, aes(x = PC1, y = PC2, color = Species)) +
geom_point(size = 4, alpha = 0.7) +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1 * 0.5, yend = PC2 * 0.5),
arrow = arrow(length = unit(0.3, "cm")), color = "black") +
geom_text(data = loadings, aes(x = PC1 * 0.5, y = PC2 * 0.5, label = Flammability),
color = "black", vjust = -0.5, hjust = 0.5, size = 6) +
xlab(paste("PC1 (", round(summary(pca)$cont$importance[2, 1] * 100, 1), "%)", sep = "")) +
ylab(paste("PC2 (", round(summary(pca)$cont$importance[2, 2] * 100, 1), "%)", sep = "")) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=18),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(face = "bold", color = "black"),
axis.text.y=element_text(face = "bold", color = "black"),
strip.text.x = element_text(size = 15, colour = "black", face = "bold"),
legend.text = element_text(face = "italic")) +
theme(legend.position = "bottom")
ggsave("Figures/Box_PCA.png",
width = 10, height = 7)
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView", "factoextra")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
library(factoextra)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Flame_Total, Smld_Total, Max_Height, Mass_Loss)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss")
data$Species <- TIME$Species
data$Status <- TIME$Ruderal
# Perform K-Means clustering with 3 clusters
kmeans_result <- kmeans(data, centers = 3, nstart = 20)
# Perform K-Means clustering with 3 clusters
kmeans_result <- kmeans(data, centers = 4, nstart = 20)
# Load the iris dataset
data(iris)
# Remove the Species column for clustering
iris_data <- iris[, -5]
View(iris)
# Remove the Species column for clustering
iris_data <- iris[, -5]
# Perform K-Means clustering with 3 clusters
kmeans_result <- kmeans(iris_data, centers = 3, nstart = 20)
# View the result
print(kmeans_result)
# Add the cluster assignment to the original data
iris$Cluster <- as.factor(kmeans_result$cluster)
# Plot the clusters
ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Cluster)) +
geom_point(size = 3) +
labs(title = "K-Means Clustering of Iris Data", x = "Petal Length", y = "Petal Width") +
theme_minimal()
View(data)
# Perform K-Means clustering with 3 clusters
kmeans_result <- kmeans(data, centers = 3, nstart = 20)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss")
# Perform K-Means clustering with 3 clusters
kmeans_result <- kmeans(data, centers = 3, nstart = 20)
# View the result
print(kmeans_result)
# Add the cluster assignment to the original data
data$Cluster <- as.factor(kmeans_result$cluster)
# Plot the clusters
ggplot(data, aes(x = `Flame Height`, y = `Flame Duration`, color = Cluster)) +
geom_point(size = 3) +
labs(title = "K-Means Clustering of Iris Data", x = "Petal Length", y = "Petal Width") +
theme_minimal()
# Plot the clusters
ggplot(data, aes(x = `Flame Height`, y = `Flame Duration`, color = Cluster)) +
geom_point(size = 3) +
theme_minimal()
# Plot the clusters
ggplot(data, aes(x = `Smolder Duration`, y = `Flame Duration`, color = Cluster)) +
geom_point(size = 3) +
theme_minimal()
# Plot the clusters
ggplot(data, aes(x = `Smolder Time`, y = `Flame Duration`, color = Cluster)) +
geom_point(size = 3) +
theme_minimal()
# Plot the clusters
ggplot(data, aes(x = `Mass Loss`, y = `Flame Duration`, color = Cluster)) +
geom_point(size = 3) +
theme_minimal()
# Plot the clusters
ggplot(data, aes(x = `Mass Loss`, y = `Flame Height`, color = Cluster)) +
geom_point(size = 3) +
theme_minimal()
# Plot the clusters
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`, color = Cluster)) +
geom_point(size = 3) +
theme_minimal()
################################################################################
################################################################################
#########################   Grass - Flammability   #############################
#########################          PCA             #############################
#########################  University of Florida   #############################
#########################     Gage LaPierre        #############################
#########################          2023            #############################
################################################################################
################################################################################
######################### Clears Environment & History  ########################
rm(list=ls(all=TRUE))
cat("\014")
#
#########################     Installs Packages   ##############################
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView", "factoextra")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################     Loads Packages     ##############################
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
library(factoextra)
##########################     Read in Data  ###################################
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("Flame Duration", "Smolder Time", "Flame Height",
"Mass Loss")
# Remove the Species column for clustering
data <- data[, -5]
# Perform K-Means clustering with 3 clusters
kmeans_result <- kmeans(data, centers = 3, nstart = 20)
# View the result
print(kmeans_result)
# Add the cluster assignment to the original data
data$Cluster <- as.factor(kmeans_result$cluster)
# Plot the clusters
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`, color = Cluster)) +
geom_point(size = 3) +
theme_minimal()
################################################################################
################################################################################
#########################   Grass - Flammability   #############################
#########################          PCA             #############################
#########################  University of Florida   #############################
#########################     Gage LaPierre        #############################
#########################          2023            #############################
################################################################################
################################################################################
######################### Clears Environment & History  ########################
rm(list=ls(all=TRUE))
cat("\014")
#
#########################     Installs Packages   ##############################
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView", "factoextra")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################     Loads Packages     ##############################
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
library(factoextra)
##########################     Read in Data  ###################################
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Species, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("Species", "Flame Duration", "Smolder Time", "Flame Height", "Mass Loss")
# Extract Species column for later use
species <- data$Species
# Remove the Species column for clustering
data_no_species <- data[, -1]
# Perform K-Means clustering with 3 clusters
set.seed(123)
kmeans_result <- kmeans(data_no_species, centers = 3, nstart = 20)
# View the result
print(kmeans_result)
# Add the cluster assignment and species back to the original data
data$Cluster <- as.factor(kmeans_result$cluster)
# Plot the clusters with species labels
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`, color = Cluster, label = Species)) +
geom_point(size = 3) +
geom_text(vjust = -1, hjust = 1, size = 3) +
labs(title = "K-Means Clustering of Grass Flammability Data",
x = "Flame Duration", y = "Flame Height") +
theme_minimal()
# Plot the clusters with species labels
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`, color = Cluster, shape  = Species)) +
geom_point(size = 3) +
geom_text(vjust = -1, hjust = 1, size = 3) +
labs(title = "K-Means Clustering of Grass Flammability Data",
x = "Flame Duration", y = "Flame Height") +
theme_minimal()
# Plot the clusters with species labels
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`,
color = Cluster, label = Species, shape = Species)) +
geom_point(size = 3) +
geom_text(vjust = -1, hjust = 1, size = 3) +
labs(title = "K-Means Clustering of Grass Flammability Data",
x = "Flame Duration", y = "Flame Height") +
theme_minimal()
# Plot the clusters with species labels
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`,
color = Species, label = Species, shape = Cluster)) +
geom_point(size = 3) +
geom_text(vjust = -1, hjust = 1, size = 3) +
labs(title = "K-Means Clustering of Grass Flammability Data",
x = "Flame Duration", y = "Flame Height") +
theme_minimal()
# Plot the clusters with species labels
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`,
color = Cluster)) +
geom_point(size = 3) +
geom_text(vjust = -1, hjust = 1, size = 3) +
labs(title = "K-Means Clustering of Grass Flammability Data",
x = "Flame Duration", y = "Flame Height") +
theme_minimal()
# Plot the clusters with species labels
ggplot(data, aes(x = `Flame Duration`, y = `Flame Height`,
color = Cluster)) +
geom_point(size = 3) +
labs(title = "K-Means Clustering of Grass Flammability Data",
x = "Flame Duration", y = "Flame Height") +
theme_minimal()
