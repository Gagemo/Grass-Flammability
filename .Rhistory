library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
library(emmeans)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Species, FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss)
colnames(data) <- c("Species", "Fuel Bed Height", "Flame Duration",
"Smolder Duration", "Flame Height", "Mass Loss")
# Fit linear models with fuel bed height as a covariate
flame_duration_model <- lm(`Flame Duration` ~ Species + `Fuel Bed Height`, data = data)
smolder_duration_model <- lm(`Smolder Duration` ~ Species + `Fuel Bed Height`, data = data)
flame_height_model <- lm(`Flame Height` ~ Species + `Fuel Bed Height`, data = data)
mass_loss_model <- lm(`Mass Loss` ~ Species + `Fuel Bed Height`, data = data)
# Calculate EMMs for each variable
flame_duration_emm <- emmeans(flame_duration_model, ~ Species)
smolder_duration_emm <- emmeans(smolder_duration_model, ~ Species)
flame_height_emm <- emmeans(flame_height_model, ~ Species)
mass_loss_emm <- emmeans(mass_loss_model, ~ Species)
View(mass_loss_emm)
# Summarize EMMs
flame_duration_summary <- summary(flame_duration_emm)
smolder_duration_summary <- summary(smolder_duration_emm)
flame_height_summary <- summary(flame_height_emm)
mass_loss_summary <- summary(mass_loss_emm)
# Combine the summaries into a single data frame
emm_results <- data.frame(
Species = flame_duration_summary$Species,
`Flame Duration EMM` = flame_duration_summary$emmean,
`Smolder Duration EMM` = smolder_duration_summary$emmean,
`Flame Height EMM` = flame_height_summary$emmean,
`Mass Loss EMM` = mass_loss_summary$emmean
)
print(emm_results)
data <- emm_results %>%
group_by(Species) %>%
summarise(across(`Flame Duration`:`Smolder Duration`: `Flame Height`:`Mass Loss`, mean, na.rm = TRUE))
# The palette without black:
cbbPalette <- c("#BE0032", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
ggplot(emm_results, aes(x = Flame.Duration.EMM, y = Flame.Height.EMM)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
ggplot(emm_results, aes(x = Smolder.Duration.EMM, y = Mass.Loss.EMM)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
View(emm_results)
colnames(emm_results) <- c("Species", "Flame Duration","Smolder Duration",
"Flame Height", "Mass Loss")
print(emm_results)
# The palette without black:
cbbPalette <- c("#BE0032", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
ggplot(emm_results, aes(x = `Flame Duration`, y = `Flame Height`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
ggplot(emm_results, aes(x = `Smolder Duration`, y = `Mass Loss`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
colnames(emm_results) <- c("Species", "Flame duration (s)","Smolder duration (s)",
"Flame height (cm)", "Mass loss (g)")
print(emm_results)
# The palette without black:
cbbPalette <- c("#BE0032", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
ggplot(emm_results, aes(x = `Flame Duration`, y = `Flame Height`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
colnames(emm_results) <- c("Species", "Flame duration (s)","Smolder duration (s)",
"Flame height (cm)", "Mass loss (g)")
print(emm_results)
# The palette without black:
cbbPalette <- c("#BE0032", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
ggplot(emm_results, aes(x = `Flame duration (s)`, y = `Flame height (cm)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
ggplot(emm_results, aes(x = `Smolder duration (s)`, y = `Mass loss (g)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
View(emm_results)
rm(list=ls(all=TRUE))
cat("\014")
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView", "emmeans")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
library(emmeans)
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Species, FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss, Mass_Rate)
colnames(data) <- c("Species", "Fuel Bed Height", "Flame Duration",
"Smolder Duration", "Flame Height", "Mass Loss", " Mass Rate")
# Fit linear models with fuel bed height as a covariate
flame_duration_model <- lm(`Flame Duration` ~ Species + `Fuel Bed Height`, data = data)
smolder_duration_model <- lm(`Smolder Duration` ~ Species + `Fuel Bed Height`, data = data)
flame_height_model <- lm(`Flame Height` ~ Species + `Fuel Bed Height`, data = data)
mass_loss_model <- lm(`Mass Loss` ~ Species + `Fuel Bed Height`, data = data)
mass_rate_model <- lm(`Mass Rate` ~ Species + `Fuel Bed Height`, data = data)
# Calculate EMMs for each variable
flame_duration_emm <- emmeans(flame_duration_model, ~ Species)
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Species, FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss, Mass_Rate)
colnames(data) <- c("Species", "Fuel Bed Height", "Flame Duration",
"Smolder Duration", "Flame Height", "Mass Loss", "Mass Rate")
# Fit linear models with fuel bed height as a covariate
flame_duration_model <- lm(`Flame Duration` ~ Species + `Fuel Bed Height`, data = data)
smolder_duration_model <- lm(`Smolder Duration` ~ Species + `Fuel Bed Height`, data = data)
flame_height_model <- lm(`Flame Height` ~ Species + `Fuel Bed Height`, data = data)
mass_loss_model <- lm(`Mass Loss` ~ Species + `Fuel Bed Height`, data = data)
mass_rate_model <- lm(`Mass Rate` ~ Species + `Fuel Bed Height`, data = data)
# Calculate EMMs for each variable
flame_duration_emm <- emmeans(flame_duration_model, ~ Species)
smolder_duration_emm <- emmeans(smolder_duration_model, ~ Species)
flame_height_emm <- emmeans(flame_height_model, ~ Species)
mass_loss_emm <- emmeans(mass_loss_model, ~ Species)
mass_rate_emm <- emmeans(mass_rate_model, ~ Species)
# Summarize EMMs
flame_duration_summary <- summary(flame_duration_emm)
smolder_duration_summary <- summary(smolder_duration_emm)
flame_height_summary <- summary(flame_height_emm)
mass_loss_summary <- summary(mass_loss_emm)
mass_rate_summary <- summary(mass_rate_emm)
# Combine the summaries into a single data frame
emm_results <- data.frame(
Species = flame_duration_summary$Species,
`Flame Duration EMM` = flame_duration_summary$emmean,
`Smolder Duration EMM` = smolder_duration_summary$emmean,
`Flame Height EMM` = flame_height_summary$emmean,
`Mass Loss EMM` = mass_loss_summary$emmean,
`Mass Rate EMM` = mass_Rate_summary$emmean
)
colnames(emm_results) <- c("Species", "Flame duration (s)","Smolder duration (s)",
"Flame height (cm)", "Mass loss (g)", "Mass loss rate (g/s)")
# Combine the summaries into a single data frame
emm_results <- data.frame(
Species = flame_duration_summary$Species,
`Flame Duration EMM` = flame_duration_summary$emmean,
`Smolder Duration EMM` = smolder_duration_summary$emmean,
`Flame Height EMM` = flame_height_summary$emmean,
`Mass Loss EMM` = mass_loss_summary$emmean,
`Mass Rate EMM` = mass_Rate_summary$emmean
)
mass_rate_summary <- summary(mass_rate_emm)
# Combine the summaries into a single data frame
emm_results <- data.frame(
Species = flame_duration_summary$Species,
`Flame Duration EMM` = flame_duration_summary$emmean,
`Smolder Duration EMM` = smolder_duration_summary$emmean,
`Flame Height EMM` = flame_height_summary$emmean,
`Mass Loss EMM` = mass_loss_summary$emmean,
`Mass Rate EMM` = mass_Rate_summary$emmean
)
# Combine the summaries into a single data frame
emm_results <- data.frame(
Species = flame_duration_summary$Species,
`Flame Duration EMM` = flame_duration_summary$emmean,
`Smolder Duration EMM` = smolder_duration_summary$emmean,
`Flame Height EMM` = flame_height_summary$emmean,
`Mass Loss EMM` = mass_loss_summary$emmean,
`Mass Rate EMM` = mass_rate_summary$emmean
)
colnames(emm_results) <- c("Species", "Flame duration (s)","Smolder duration (s)",
"Flame height (cm)", "Mass loss (g)", "Mass loss rate (g/s)")
print(emm_results)
# The palette without black:
cbbPalette <- c("#BE0032", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
ggplot(emm_results, aes(x = `Flame duration (s)`, y = `Flame height (cm)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
ggplot(emm_results, aes(x = `Smolder duration (s)`, y = `Mass rate (g/s)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
ggplot(emm_results, aes(x = `Smolder duration (s)`, y = `Mass loss rate (g/s)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
View(emm_results)
ggplot(emm_results, aes(x = `Flame duration (s)`, y = `Flame height (cm)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
rm(list=ls(all=TRUE))
cat("\014")
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView", "emmeans")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
library(emmeans)
GRASS = read.csv("Data/Flammability Project - Temp.csv")
str(GRASS)
summary(GRASS)
GRASS$Species = as.character(GRASS$Species)
GRASS$Species = as.factor(GRASS$Species)
GRASS$T1 = as.numeric(GRASS$T1)
GRASS$T2 = as.numeric(GRASS$T2)
GRASS$Species = factor(GRASS$Species)
################################################################################
################################################################################
#########################   Grass - Flammability   #############################
#########################          PCA             #############################
#########################  University of Florida   #############################
#########################     Gage LaPierre        #############################
#########################          2023            #############################
################################################################################
################################################################################
######################### Clears Environment & History  ########################
rm(list=ls(all=TRUE))
cat("\014")
#########################     Installs Packages   ##############################
list.of.packages <- c("tidyverse", "vegan", "agricolae", "tables", "plotrix",
"ggpubr", "rstatix", "multcompView", "emmeans")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
##########################     Loads Packages     ##############################
library(tidyverse)
library(vegan)
library(agricolae)
library(tables)
library(plotrix)
library(ggpubr)
library(rstatix)
library(multcompView)
library(emmeans)
##########################     Read in Data  ###################################
TIME <- read.csv("Data/Flammability Project - Time.csv")
LOSS <- read.csv("Data/Flammability Project - Weight.csv")
data <- cbind(TIME, LOSS)
data$FB = as.numeric(data$FB)
data <- data[ , !duplicated(colnames(data))]
data <- data %>%
dplyr::select(Species, FB, Flame_Total, Smld_Total, Max_Height, Mass_Loss, Mass_Rate)
colnames(data) <- c("Species", "Fuel Bed Height", "Flame Duration",
"Smolder Duration", "Flame Height", "Mass Loss", "Mass Rate")
# Fit linear models with fuel bed height as a covariate
flame_duration_model <- lm(`Flame Duration` ~ Species + `Fuel Bed Height`, data = data)
smolder_duration_model <- lm(`Smolder Duration` ~ Species + `Fuel Bed Height`, data = data)
flame_height_model <- lm(`Flame Height` ~ Species + `Fuel Bed Height`, data = data)
mass_loss_model <- lm(`Mass Loss` ~ Species + `Fuel Bed Height`, data = data)
mass_rate_model <- lm(`Mass Rate` ~ Species + `Fuel Bed Height`, data = data)
# Calculate EMMs for each variable
flame_duration_emm <- emmeans(flame_duration_model, ~ Species)
smolder_duration_emm <- emmeans(smolder_duration_model, ~ Species)
flame_height_emm <- emmeans(flame_height_model, ~ Species)
mass_loss_emm <- emmeans(mass_loss_model, ~ Species)
mass_rate_emm <- emmeans(mass_rate_model, ~ Species)
# Summarize EMMs
flame_duration_summary <- summary(flame_duration_emm)
smolder_duration_summary <- summary(smolder_duration_emm)
flame_height_summary <- summary(flame_height_emm)
mass_loss_summary <- summary(mass_loss_emm)
mass_rate_summary <- summary(mass_rate_emm)
# Combine the summaries into a single data frame
emm_results <- data.frame(
Species = flame_duration_summary$Species,
`Flame Duration EMM` = flame_duration_summary$emmean,
`Smolder Duration EMM` = smolder_duration_summary$emmean,
`Flame Height EMM` = flame_height_summary$emmean,
`Mass Loss EMM` = mass_loss_summary$emmean,
`Mass Rate EMM` = mass_rate_summary$emmean
)
colnames(emm_results) <- c("Species", "Flame duration (s)","Smolder duration (s)",
"Flame height (cm)", "Mass loss (g)", "Mass loss rate (g/s)")
print(emm_results)
# The palette without black:
cbbPalette <- c("#BE0032", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
ggplot(emm_results, aes(x = `Flame duration (s)`, y = `Flame height (cm)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
ggplot(emm_results, aes(x = `Smolder duration (s)`, y = `Mass loss rate (g/s)`)) +
geom_point(aes(fill = Species), shape = 21, size = 8) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5, face="bold", colour = "black"),
text=element_text(size=20),
axis.title.x = element_text(face="bold", colour = "black"),
axis.title.y = element_text(face="bold", colour = "black"),
axis.text.x=element_text(size = 20, face = "bold", color = "black"),
axis.text.y=element_text(size = 20, face = "bold", color = "black"),
strip.text.x = element_text(size = 20, colour = "black", face = "bold"),
legend.text = element_text(size = 20, face = "italic")) +
scale_fill_manual(values = cbbPalette, labels = function(x) str_wrap(x, width = 10)) +
theme(legend.position = "bottom", legend.spacing.x = unit(1.0, 'cm'),
legend.spacing.y = unit(1.0, 'cm'), legend.spacing = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))
